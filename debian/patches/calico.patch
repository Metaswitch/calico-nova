--- a/nova/network/model.py
+++ b/nova/network/model.py
@@ -42,6 +42,7 @@
 VIF_TYPE_VHOSTUSER = 'vhostuser'
 VIF_TYPE_VROUTER = 'vrouter'
 VIF_TYPE_OTHER = 'other'
+VIF_TYPE_TAP = 'tap'
 
 # Constants for dictionary keys in the 'vif_details' field in the VIF
 # class
--- a/nova/virt/libvirt/vif.py
+++ b/nova/virt/libvirt/vif.py
@@ -318,6 +318,16 @@
 
         return conf
 
+    def get_config_tap(self, instance, vif, image_meta,
+                       inst_type, virt_type):
+        conf = self.get_base_config(instance, vif, image_meta,
+                                    inst_type, virt_type)
+
+        dev = self.get_vif_devname(vif)
+        designer.set_vif_host_backend_ethernet_config(conf, dev)
+
+        return conf
+
     def get_config_mlnx_direct(self, instance, vif, image_meta,
                                inst_type, virt_type):
         conf = self.get_base_config(instance, vif, image_meta,
@@ -588,6 +598,12 @@
         except processutils.ProcessExecutionError:
             LOG.exception(_LE("Failed while plugging vif"), instance=instance)
 
+    def plug_tap(self, instance, vif):
+        """Plug a VIF_TYPE_TAP virtual interface
+        """
+        dev = self.get_vif_devname(vif)
+        linux_net.create_tap_dev(dev, mac_address='00:61:fe:ed:ca:fe')
+
     def plug(self, instance, vif):
         vif_type = vif['type']
 
@@ -721,6 +737,15 @@
             LOG.exception(_LE("Failed while unplugging vif"),
                           instance=instance)
 
+    def unplug_tap(self, instance, vif):
+        """Unplug a VIF_TYPE_TAP virtual interface.
+        """
+        dev = self.get_vif_devname(vif)
+        try:
+            linux_net.delete_net_dev(dev)
+        except processutils.ProcessExecutionError:
+            LOG.exception(_("Failed while unplugging vif"), instance=instance)
+
     def unplug_iovisor(self, instance, vif):
         """Unplug using PLUMgrid IO Visor Driver
 
